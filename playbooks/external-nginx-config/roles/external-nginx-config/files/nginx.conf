user www-data;
worker_processes auto;
worker_rlimit_nofile 40000;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
  worker_connections 8192;
}

stream {
  upstream k3s_servers {
    server 192.168.0.101:6443;
    server 192.168.0.102:6443;
    server 192.168.0.103:6443;
  }

  server {
    listen 6443;
    proxy_pass k3s_servers;
  }
}

http {
  log_format compression '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" "$gzip_ratio"';  

  access_log  /var/log/nginx/access.log;
  error_log   /var/log/nginx/error.log;
  
  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
  }

  map $ssl_server_name $targetBackend {
    www.curiosityworks.org              http://192.168.0.101:80; 
    git-web.curiosityworks.org          http://192.168.0.109:3000;
    console.curiosityworks.org          http://192.168.0.101:80;
  }

  server {
    listen 443 ssl;
    ssl_protocols       TLSv1.2;
    ssl_certificate     /etc/letsencrypt/live/curiosityworks.org/cert.pem;
    ssl_certificate_key /etc/letsencrypt/live/curiosityworks.org/privkey.pem;

    # disable any limits to avoid HTTP 413 for large image uploads
    client_max_body_size 0;

    resolver 1.1.1.1;

    location / {
      proxy_pass                          $targetBackend;
      proxy_set_header  Host              $http_host;   # required for docker client's sake
      proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
      proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Proto $scheme;      
      proxy_read_timeout                  900s;
    }
  }

}