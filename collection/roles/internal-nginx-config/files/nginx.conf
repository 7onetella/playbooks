user www-data;
worker_processes auto;
worker_rlimit_nofile 40000;
include /etc/nginx/modules-enabled/*.conf;

events {
  worker_connections 8192;
}

http {
  log_format compression '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" "$gzip_ratio"';  

  access_log  /var/log/nginx/access.log;
  error_log   /var/log/nginx/error.log;

  map $host $target_http_backend {
    fileserver.curiosityworks.org           http://192.168.0.118:80;
  }

  server {
      listen 80 default_server;
      listen [::]:80 default_server;

      client_max_body_size 0;

      resolver 1.1.1.1;

      # redirecting from port 80 to 443 has a TLS striping vunerability
      #
      # listen 80 default_server;
      # listen [::]:80 default_server;
      # server_name _;
      # return 301 https://$host$request_uri;
    location / {
      proxy_http_version                  1.1;            # this downgrade helps with goland ws issue
      proxy_pass                          $target_http_backend;
      proxy_set_header  Host              $http_host;     # required for docker client's sake
      proxy_set_header  X-Real-IP         $remote_addr;   # pass on real client's IP
      proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Proto $scheme;      
      proxy_read_timeout                  900s;
      proxy_connect_timeout 1s;
      proxy_set_header Upgrade            $http_upgrade;
      proxy_set_header Connection         "upgrade";   
      proxy_ssl_verify                    off;   
      proxy_cache_bypass                  $http_upgrade;
    }
  }

  map $ssl_server_name $targetBackend {
    docker-registry.int.curiosityworks.org  http://192.168.0.107:5000;
    jenkins.int.curiosityworks.org          http://192.168.0.108:8080;
    pihole.int.curiosityworks.org           http://192.168.0.110:80;
    prometheus.int.curiosityworks.org       http://192.168.0.114:9090;
    grafana.int.curiosityworks.org          http://192.168.0.115:3000;
    git-web.int.curiosityworks.org          http://192.168.0.109:3000;          
    elasticsearch.int.curiosityworks.org    http://192.168.0.117:9200;
    kibana.int.curiosityworks.org           http://192.168.0.117:5601;
    ~^webapp-.*                             http://192.168.0.101:80;
    vscode-captain.int.curiosityworks.org   http://192.168.0.119:9991;
    goland-captain.int.curiosityworks.org   http://192.168.0.119:9999;
    vscode-macbook.int.curiosityworks.org   http://192.168.0.199:9991;
  }

  server {
    listen 443 ssl;
    ssl_protocols       TLSv1.2;
    ssl_certificate     /etc/letsencrypt/live/int.curiosityworks.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/int.curiosityworks.org/privkey.pem;
    
    # disable any limits to avoid HTTP 413 for large image uploads
    client_max_body_size 0;

    resolver 1.1.1.1;

    location / {
      proxy_http_version                  1.1;            # this downgrade helps with goland ws issue
      proxy_pass                          $targetBackend;
      proxy_set_header  Host              $http_host;     # required for docker client's sake
      proxy_set_header  X-Real-IP         $remote_addr;   # pass on real client's IP
      proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Proto $scheme;      
      proxy_read_timeout                  900s;
      proxy_connect_timeout 1s;
      proxy_set_header Upgrade            $http_upgrade;
      proxy_set_header Connection         "upgrade";   
      proxy_ssl_verify                    off;   
      proxy_ssl_server_name               on;
      proxy_cache_bypass                  $http_upgrade;
    }
  }
}