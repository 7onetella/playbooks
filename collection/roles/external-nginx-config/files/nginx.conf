user www-data;
worker_processes auto;
worker_rlimit_nofile 40000;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
  worker_connections 8192;
}

http {
  log_format main '$remote_addr $host $remote_user [$time_local] '
                  '"$request" $status $body_bytes_sent '
                  '"$http_referer" "$http_user_agent" "$gzip_ratio"';  

  error_log   /var/log/nginx/error.log;
  
  server_tokens off;

  server {
    listen 8080;
    server_name 127.0.0.1;

    location / {
      stub_status on;
      allow 127.0.0.1;
      deny all;
    }
  }

  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    access_log off;
    return 301 https://$host$request_uri;
  }  
  
  map $ssl_server_name $target_backend {
    www.curiosityworks.org              http://192.168.69.101:80; 
    robot.curiosityworks.org            http://192.168.69.101:80; 
    console.curiosityworks.org          http://192.168.69.101:80;
    ~^vscode-.*                         http://192.168.69.101:80;
    grafana.curiosityworks.org          http://192.168.69.130:3000;
    prometheus.curiosityworks.org       http://192.168.69.130:9090;
  }

  server {
    listen 192.168.69.100:443 ssl;
    server_name *.curiosityworks.org;
    access_log          /var/log/nginx/access.log main;
    ssl_protocols       TLSv1.2;
    ssl_certificate     /etc/letsencrypt/live/curiosityworks.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/curiosityworks.org/privkey.pem;

    # disable any limits to avoid HTTP 413 for large image uploads
    client_max_body_size 0;

    resolver 1.1.1.1;

    location / {
      proxy_pass                          $target_backend;
      proxy_set_header  Host              $http_host;   # required for docker client's sake
      proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
      proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Proto $scheme;      
      proxy_read_timeout                  900s;
      proxy_set_header Upgrade            $http_upgrade;
      proxy_set_header Connection         "upgrade";
    }
  }

  server {
    listen 192.168.69.120:443 ssl;
    server_name grafana.curiosityworks.org prometheus.curiosityworks.org loki.curiosityworks.org;
    access_log off;
    ssl_protocols       TLSv1.2;
    ssl_certificate     /etc/letsencrypt/live/curiosityworks.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/curiosityworks.org/privkey.pem;

    # disable any limits to avoid HTTP 413 for large image uploads
    client_max_body_size 0;

    resolver 1.1.1.1;

    location / {
      # proxy_http_version                  1.1;            # default is 1.0. this upgrade helps with goland ws issue
      proxy_pass                          $target_backend;
      proxy_set_header  Host              $http_host;   # required for docker client's sake
      proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
      proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Proto $scheme;      
      proxy_read_timeout                  900s;
      proxy_set_header Upgrade            $http_upgrade;
      proxy_set_header Connection         "upgrade";
      # proxy_connect_timeout 1s;
      # proxy_ssl_verify                    off;   
      # proxy_ssl_server_name               on;
      # proxy_cache_bypass                  $http_upgrade;    
    }
  }  

}